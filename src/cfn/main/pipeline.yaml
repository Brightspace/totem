# Copyright 2017 D2L Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  RoleARN:
    Type: String
    Description: The ARN of the role that this pipeline will assume during its
      runs
  BucketName:
    Type: String
    Description: The bucket where this pipeline will store its build artifacts
  BlueGreenStackName:
    Type: String
    Description: The name of the stack that this pipeline will use to control
      blue/green deployments

  FetchSourceRepositoryType:
    Type: String
    Description: This pipeline fetches code from either GitHub or CodeCommit
      repositories, depending on the value of this parameter
    AllowedValues: [GIT_HUB, CODE_COMMIT]
    Default: GIT_HUB
  FetchSourceRepositoryArn:
    Type: String
    Description: The source repo's ARN; ignored for GIT_HUB repositories
    Default: ''
  FetchSourceRepositoryName:
    Type: String
    Description: During its FetchSource action, this pipeline fetches the code
      referenced by FetchSourceRepositoryName and
      FetchSourceRepositoryBranchName
  FetchSourceRepositoryBranchName:
    Type: String
    Description: See FetchSourceRepositoryName
    Default: master
  FetchSourceRepositoryOwner:
    Type: String
    Description: While fetching code from GitHub repositories, this pipeline
      uses the credentials specified by FetchSourceRepositoryOwner and
      FetchSourceRepositoryToken; these parameters are required for GitHub
      repositories but are not required for CodeCommit repositories
    Default: ''
  FetchSourceRepositoryToken:
    Type: String
    Description: See FetchSourceRepositoryOwner
    NoEcho: true
    Default: ''

  BuildSourceBuildName:
    Type: String
    Description: The name of the build project that this pipeline will call
      during its BuildSource action

  RunSystemTestsBuildName:
    Type: String
    Description: The name of the build project that this pipeline will call
      during its RunSystemTests action

Conditions:
  IsCodeCommitRepository: !Equals [CODE_COMMIT, !Ref FetchSourceRepositoryType]

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref RoleARN
      Name: !Ref AWS::StackName
      ArtifactStore:
        Type: S3
        Location: !Ref BucketName
      Stages:
      - Name: Fetch
        Actions:
        - Name: FetchSource
          InputArtifacts: []
          OutputArtifacts: [Name: FetchSourceOutput]
          ActionTypeId:
            Category: Source
            Owner: !If [IsCodeCommitRepository, AWS, ThirdParty]
            Provider: !If [IsCodeCommitRepository, CodeCommit, GitHub]
            Version: 1
          Configuration:
            RepositoryName: !If [IsCodeCommitRepository, !Ref FetchSourceRepositoryName, !Ref 'AWS::NoValue']
            BranchName: !If [IsCodeCommitRepository, !Ref FetchSourceRepositoryBranchName, !Ref 'AWS::NoValue']
            PollForSourceChanges: !If [IsCodeCommitRepository, false, !Ref 'AWS::NoValue']
            Branch: !If [IsCodeCommitRepository, !Ref 'AWS::NoValue', !Ref FetchSourceRepositoryBranchName]
            Repo: !If [IsCodeCommitRepository, !Ref 'AWS::NoValue', !Ref FetchSourceRepositoryName]
            Owner: !If [IsCodeCommitRepository, !Ref 'AWS::NoValue', !Ref FetchSourceRepositoryOwner]
            OAuthToken: !If [IsCodeCommitRepository, !Ref 'AWS::NoValue', !Ref FetchSourceRepositoryToken]

      - Name: BlueGreenDeploy 
        Actions:
        - Name: BuildSource
          InputArtifacts: [Name: FetchSourceOutput]
          OutputArtifacts: [Name: BuildSourceOutput]
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref BuildSourceBuildName
          RunOrder: 1

        - Name: PreDeploy
          InputArtifacts: [Name: FetchSourceOutput, Name: BuildSourceOutput]
          OutputArtifacts: []
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            StackName: !Ref BlueGreenStackName
            TemplatePath: BuildSourceOutput::totem-blue-green.yaml
            Capabilities: CAPABILITY_IAM
            RoleArn: !Ref RoleARN
            OutputFileName: output.json
            ParameterOverrides: |
              {
                "Phase": "PRE_DEPLOY"
              }
          RunOrder: 2

        - Name: Deploy
          InputArtifacts: [Name: FetchSourceOutput, Name: BuildSourceOutput]
          OutputArtifacts: [Name: DeployOutput]
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            StackName: !Ref BlueGreenStackName
            TemplatePath: BuildSourceOutput::totem-blue-green.yaml
            Capabilities: CAPABILITY_IAM
            RoleArn: !Ref RoleARN
            OutputFileName: output.json
            ParameterOverrides: !Sub |
              {
                "Phase": "DEPLOY"
              }
          RunOrder: 3

        - Name: RunSystemTests
          InputArtifacts: [Name: FetchSourceOutput]
          OutputArtifacts: []
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref RunSystemTestsBuildName
          RunOrder: 4

        - Name: PostDeploy
          InputArtifacts: [Name: FetchSourceOutput, Name: BuildSourceOutput, Name: DeployOutput]
          OutputArtifacts: []
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            StackName: !Ref BlueGreenStackName
            TemplatePath: BuildSourceOutput::totem-blue-green.yaml
            Capabilities: CAPABILITY_IAM
            RoleArn: !Ref RoleARN
            ParameterOverrides: !Sub |
              {
                "Color": { "Fn::GetParam" : ["DeployOutput", "output.json", "NextColor"] },
                "Phase": "POST_DEPLOY"
              }
          RunOrder: 5

  PipelineTriggerRule:
    Type: AWS::Events::Rule
    Condition: IsCodeCommitRepository
    Properties: 
      EventPattern: {
        "source": [ "aws.codecommit" ],
        "resources": [ !Ref FetchSourceRepositoryArn ],
        "detail": {
           "event": [
             "referenceCreated",
             "referenceUpdated"
           ],
           "referenceType":["branch"],
           "referenceName": ["master"]
        }
      }
      State: ENABLED
      Targets:
      - Id: !Sub '${AWS::StackName}-rule'
        Arn: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
        RoleArn: !GetAtt PipelineTriggerRole.Arn

  PipelineTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: !Ref "AWS::StackName"
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Resource:
            - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
            Action:
              - codepipeline:StartPipelineExecution

