# Copyright 2017 D2L Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  RepositoryType:
    Type: String
    Description: Totem fetches code from either GitHub or CodeCommit
      repositories, depending on the value of this parameter; for
      GitHub, specify GitHubRepositoryX parameter values; for CodeCommit,
      Totem will create a repository
    AllowedValues: [GIT_HUB, CODE_COMMIT]
    Default: GIT_HUB
  GitHubRepositoryName:
    Type: String
    Description: While fetching code from GitHub repositories, Totem fetches
      the code referenced by GitHubRepositoryName and
      GitHubRepositoryBranchName
    Default: ''
  GitHubRepositoryBranchName:
    Type: String
    Description: See GitHubRepositoryName
    Default: master
  GitHubRepositoryOwner:
    Type: String
    Description: While fetching code from GitHub repositories, Totem uses the
      credentials specified by GitHubRepositoryOwner and GitHubRepositoryToken
    Default: ''
  GitHubRepositoryToken:
    Type: String
    Description: See GitHubRepositoryOwner
    NoEcho: true
    Default: ''

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      RepositoryType:
        default: 'Repository Type'
      GitHubRepositoryName:
        default: 'Repository Name'
      GitHubRepositoryBranchName:
        default: 'Branch Name'
      GitHubRepositoryOwner:
        default: 'Repository Owner'
      GitHubRepositoryToken:
        default: 'Repository Token'
    ParameterGroups:
    - Label:
        default: Repository Type
      Parameters: [ RepositoryType ]
    - Label:
        default: GitHub Details
      Parameters:
      - GitHubRepositoryName
      - GitHubRepositoryBranchName
      - GitHubRepositoryOwner
      - GitHubRepositoryToken

Conditions:
  IsCodeCommitRepository: !Equals [CODE_COMMIT, !Ref RepositoryType]

Resources:
  SourceRepository:
    Type: AWS::CodeCommit::Repository
    Condition: IsCodeCommitRepository
    DeletionPolicy: Retain
    Properties:
      RepositoryName: !Sub '${AWS::StackName}-repository'

  PipelineBucket:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: src/cfn/main/bucket.yaml

  PipelineRole:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: src/cfn/main/pipeline_role.yaml

  BuildRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: src/cfn/main/build_role.yaml
      Parameters:
        BucketName: !GetAtt PipelineBucket.Outputs.BucketName
        LogGroupName: !Sub "/aws/codebuild/${AWS::StackName}"

  CommitBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: src/cfn/main/commit_build.yaml
      Parameters:
        BlueGreenStackName: !Sub "${AWS::StackName}-blue-green"
        ServiceRoleARN: !GetAtt BuildRole.Outputs.RoleARN

  SystemTestBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: src/cfn/main/test_build.yaml
      Parameters:
        ServiceRoleARN: !GetAtt BuildRole.Outputs.RoleARN
        BlueGreenStackName: !Sub "${AWS::StackName}-blue-green"
        TestCommand: sh totem-client/src/code-build/main/system_tests.sh

  Pipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: src/cfn/main/pipeline.yaml
      Parameters:
        RoleARN: !GetAtt PipelineRole.Outputs.RoleARN
        BucketName: !GetAtt PipelineBucket.Outputs.BucketName
        BlueGreenStackName: !Sub "${AWS::StackName}-blue-green"
        FetchSourceRepositoryType: !Ref RepositoryType
        FetchSourceRepositoryArn: !If [IsCodeCommitRepository, !GetAtt SourceRepository.Arn, !Ref 'AWS::NoValue']
        FetchSourceRepositoryName: !If [IsCodeCommitRepository, !GetAtt SourceRepository.Name, !Ref GitHubRepositoryName]
        FetchSourceRepositoryBranchName: !If [IsCodeCommitRepository, master, !Ref GitHubRepositoryBranchName]
        FetchSourceRepositoryOwner: !If [IsCodeCommitRepository, !Ref 'AWS::NoValue', !Ref GitHubRepositoryOwner]
        FetchSourceRepositoryToken: !If [IsCodeCommitRepository, !Ref 'AWS::NoValue', !Ref GitHubRepositoryToken]
        BuildSourceBuildName: !GetAtt CommitBuild.Outputs.BuildName
        RunSystemTestsBuildName: !GetAtt SystemTestBuild.Outputs.BuildName
 
